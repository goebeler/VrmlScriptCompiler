Terminals unused in grammar

    "-"
    "+"
    "*"
    "/"


State 0 conflicts: 1 shift/reduce
State 13 conflicts: 3 shift/reduce
State 33 conflicts: 1 shift/reduce


Grammar

    0 $accept: unit "end of file"

    1 unit: functions

    2 functions: functions function
    3          | function
    4          | %empty

    5 function: "function" "identifier" "(" args ")" statement_block

    6 args: args "," "identifier"
    7     | "identifier"
    8     | %empty

    9 statements: statements statement
   10           | statement
   11           | %empty

   12 statement_block: "{" statements "}"
   13                | %empty

   14 statement: exp ";"

   15 assignment: exp "=" exp

   16 parameters: parameters "," exp
   17           | exp
   18           | %empty

   19 functioncall: "identifier" "(" parameters ")" ";"

   20 exp: "number"
   21    | assignment
   22    | "identifier"
   23    | "(" exp ")"
   24    | functioncall


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "=" (258) 15
    "-" (259)
    "+" (260)
    "*" (261)
    "/" (262)
    "(" (263) 5 19 23
    ")" (264) 5 19 23
    "{" (265) 12
    "}" (266) 12
    "," (267) 6 16
    ";" (268) 14 19
    "function" (269) 5
    "identifier" <std::string> (270) 5 6 7 19 22
    "number" <int> (271) 20


Nonterminals, with rules where they appear

    $accept (17)
        on left: 0
    functions <vrmlast::FunctionDefinitionList> (18)
        on left: 2 3 4
        on right: 1 2
    function <vrmlast::FunctionDefinition> (19)
        on left: 5
        on right: 2 3
    exp <vrmlast::Expression> (20)
        on left: 20 21 22 23 24
        on right: 14 15 16 17 23
    functioncall <vrmlast::Expression> (21)
        on left: 19
        on right: 24
    statement <vrmlast::Statement> (22)
        on left: 14
        on right: 9 10
    statement_block <vrmlast::StatementList> (23)
        on left: 12 13
        on right: 5
    statements <vrmlast::StatementList> (24)
        on left: 9 10 11
        on right: 9 12
    args <vrmlast::ArgumentList> (25)
        on left: 6 7 8
        on right: 5 6
    parameters <vrmlast::ParameterList> (26)
        on left: 16 17 18
        on right: 16 19
    assignment <vrmlast::AssignmentExpression> (27)
        on left: 15
        on right: 21
    unit (28)
        on left: 1
        on right: 0


State 0

    0 $accept: . unit "end of file"

    "function"  shift, and go to state 1

    "function"  [reduce using rule 4 (functions)]
    $default    reduce using rule 4 (functions)

    functions  go to state 2
    function   go to state 3
    unit       go to state 4


State 1

    5 function: "function" . "identifier" "(" args ")" statement_block

    "identifier"  shift, and go to state 5


State 2

    1 unit: functions .
    2 functions: functions . function

    "function"  shift, and go to state 1

    $default  reduce using rule 1 (unit)

    function  go to state 6


State 3

    3 functions: function .

    $default  reduce using rule 3 (functions)


State 4

    0 $accept: unit . "end of file"

    "end of file"  shift, and go to state 7


State 5

    5 function: "function" "identifier" . "(" args ")" statement_block

    "("  shift, and go to state 8


State 6

    2 functions: functions function .

    $default  reduce using rule 2 (functions)


State 7

    0 $accept: unit "end of file" .

    $default  accept


State 8

    5 function: "function" "identifier" "(" . args ")" statement_block

    "identifier"  shift, and go to state 9

    $default  reduce using rule 8 (args)

    args  go to state 10


State 9

    7 args: "identifier" .

    $default  reduce using rule 7 (args)


State 10

    5 function: "function" "identifier" "(" args . ")" statement_block
    6 args: args . "," "identifier"

    ")"  shift, and go to state 11
    ","  shift, and go to state 12


State 11

    5 function: "function" "identifier" "(" args ")" . statement_block

    "{"  shift, and go to state 13

    $default  reduce using rule 13 (statement_block)

    statement_block  go to state 14


State 12

    6 args: args "," . "identifier"

    "identifier"  shift, and go to state 15


State 13

   12 statement_block: "{" . statements "}"

    "("           shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    "("           [reduce using rule 11 (statements)]
    "identifier"  [reduce using rule 11 (statements)]
    "number"      [reduce using rule 11 (statements)]
    $default      reduce using rule 11 (statements)

    exp           go to state 19
    functioncall  go to state 20
    statement     go to state 21
    statements    go to state 22
    assignment    go to state 23


State 14

    5 function: "function" "identifier" "(" args ")" statement_block .

    $default  reduce using rule 5 (function)


State 15

    6 args: args "," "identifier" .

    $default  reduce using rule 6 (args)


State 16

   23 exp: "(" . exp ")"

    "("           shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    exp           go to state 24
    functioncall  go to state 20
    assignment    go to state 23


State 17

   19 functioncall: "identifier" . "(" parameters ")" ";"
   22 exp: "identifier" .

    "("  shift, and go to state 25

    $default  reduce using rule 22 (exp)


State 18

   20 exp: "number" .

    $default  reduce using rule 20 (exp)


State 19

   14 statement: exp . ";"
   15 assignment: exp . "=" exp

    "="  shift, and go to state 26
    ";"  shift, and go to state 27


State 20

   24 exp: functioncall .

    $default  reduce using rule 24 (exp)


State 21

   10 statements: statement .

    $default  reduce using rule 10 (statements)


State 22

    9 statements: statements . statement
   12 statement_block: "{" statements . "}"

    "("           shift, and go to state 16
    "}"           shift, and go to state 28
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    exp           go to state 19
    functioncall  go to state 20
    statement     go to state 29
    assignment    go to state 23


State 23

   21 exp: assignment .

    $default  reduce using rule 21 (exp)


State 24

   15 assignment: exp . "=" exp
   23 exp: "(" exp . ")"

    "="  shift, and go to state 26
    ")"  shift, and go to state 30


State 25

   19 functioncall: "identifier" "(" . parameters ")" ";"

    "("           shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    $default  reduce using rule 18 (parameters)

    exp           go to state 31
    functioncall  go to state 20
    parameters    go to state 32
    assignment    go to state 23


State 26

   15 assignment: exp "=" . exp

    "("           shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    exp           go to state 33
    functioncall  go to state 20
    assignment    go to state 23


State 27

   14 statement: exp ";" .

    $default  reduce using rule 14 (statement)


State 28

   12 statement_block: "{" statements "}" .

    $default  reduce using rule 12 (statement_block)


State 29

    9 statements: statements statement .

    $default  reduce using rule 9 (statements)


State 30

   23 exp: "(" exp ")" .

    $default  reduce using rule 23 (exp)


State 31

   15 assignment: exp . "=" exp
   17 parameters: exp .

    "="  shift, and go to state 26

    $default  reduce using rule 17 (parameters)


State 32

   16 parameters: parameters . "," exp
   19 functioncall: "identifier" "(" parameters . ")" ";"

    ")"  shift, and go to state 34
    ","  shift, and go to state 35


State 33

   15 assignment: exp . "=" exp
   15           | exp "=" exp .

    "="  shift, and go to state 26

    "="       [reduce using rule 15 (assignment)]
    $default  reduce using rule 15 (assignment)


State 34

   19 functioncall: "identifier" "(" parameters ")" . ";"

    ";"  shift, and go to state 36


State 35

   16 parameters: parameters "," . exp

    "("           shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    exp           go to state 37
    functioncall  go to state 20
    assignment    go to state 23


State 36

   19 functioncall: "identifier" "(" parameters ")" ";" .

    $default  reduce using rule 19 (functioncall)


State 37

   15 assignment: exp . "=" exp
   16 parameters: parameters "," exp .

    "="  shift, and go to state 26

    $default  reduce using rule 16 (parameters)
